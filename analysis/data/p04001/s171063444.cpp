/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author NikuKyabe
 */

#include <iostream>
#include <fstream>

#include "bits/stdc++.h"

using namespace std;
#define int long long
#define ITR(itr, mp) for(auto itr = (mp).begin(); itr != (mp).end(); ++itr)
typedef vector<int> vec;


class C {
public:
    vec ans;
    int n;
    string s;

    void dfs(int v, int sum, int t) {
      if (v == n) {
        ans.push_back(sum + t);
        return;
      }
      dfs(v + 1, sum, t * 10 + (s[v] - '0'));
      dfs(v + 1, sum + t, s[v] - '0');
    }

    void solve(std::istream &in, std::ostream &out) {
      in >> s;
      n = s.length();
      dfs(1, 0, s[0] - '0');
      int ret = 0;
      ITR(itr, ans) {
        ret += *itr;
      }
      out << ret << endl;
    }
};


signed main() {
  ios::sync_with_stdio(false);
  cout.tie(0);
  cout << fixed;
  C solver;
  std::istream &in(std::cin);
  std::ostream &out(std::cout);
  solver.solve(in, out);
  return 0;
}

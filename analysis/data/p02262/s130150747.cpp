#include <iostream>
#include <cstdio>
#include <stdio.h>
#include <cstdlib>
#include <stack>
#include <queue>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <string>
#include <cstring>
#include <set>
#include <map>
#include <climits>
#include <cassert>
using namespace std;

int n, A[1000000];
long long cnt;
vector <int> G;
void insertionsort(int A[], int n, int g) {
	for (int i = g; i < n; i++) {
		int v = A[i];
		int j = i - g;
		//&&?????????????????§?????????
		while ( j >= 0 && A[j] > v) {
			A[j+g] = A[j];
			j -= g;//?????????????????°???2?????\???????????´?????????????????????
			cnt++;
		}
		A[j + g] = v;//??????j-=g??????????????¨?????????????????§???
	}
}

void Shellsort(int A[], int n) {
	cnt = 0;
	//??°????????????????????????1????????????
	for (int h = 1; ; ) {
		if (h > n) {
			break;
		}
		G.push_back(h);
		h = 4 * h;
	}

	for (int i = G.size() - 1; i >= 0; i--) {
		insertionsort(A,n,G[i]);
	}
}

int main() {
	int n;
	cin >> n;
	for (int i = 0; i < n; i++) {
		scanf("%d", &A[i]);
	}
	cnt = 0;
	Shellsort(A, n);

	cout << G.size() << endl;

	for (int i = G.size() - 1; i>=0; i--) {
		printf("%d", G[i]);
		if (i) {
			printf(" ");
		}
	}
	printf("\n");
	printf("%d\n", cnt);
	for (int i = 0; i < n; i++) {
		printf("%d\n", A[i]);
	}
}